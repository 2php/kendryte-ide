import { IGenerator } from 'vs/workbench/parts/maix/fpioa-config/node/generateor';
import { IChipGeneratorConfig } from 'vs/workbench/parts/maix/fpioa-config/common/packagingTypes';
import { IFuncIOMap } from 'vs/workbench/parts/maix/fpioa-config/common/types';

export class SourceGenerator implements IGenerator {
	filename = 'fpioa-config.cpp';

	public generate(config: IChipGeneratorConfig, funcPinMap: IFuncIOMap): string {
		const generatedConfigSections: string[] = [];

		funcPinMap.forEach((io, pinFuncID) => {
			generatedConfigSections.push(`configASSERT(${config.setterFuncName}(${config.funcNamePrefix}${pinFuncID}, ${io}) === 0)`);
		});

		return `/**
 * This File Is Generated By maix-ide, do not modify directly.
 * 
 */
#include "${config.libraryName}.h"
#include "fpioa-config.h"

void configure_fpioa() {
	${generatedConfigSections.join(';\n\t')}
}
`;
	}
}

export class HeaderGenerator implements IGenerator {
	filename = 'fpioa-config.h';

	public generate(): string {
		return `/**
 * This File Is Generated By maix-ide, do not modify directly.
 * 
 */
#ifndef _MAIX_FPIOA_CONFIG_H
#define _MAIX_FPIOA_CONFIG_H

#define GUI_FPIOA_CONFIGURE \
	gui_configure_fpioa();

void configure_fpioa();

#endif /* _MAIX_FPIOA_CONFIG_H */
`;
	}
}

